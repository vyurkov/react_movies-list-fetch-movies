{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onMoviesChange","useState","searchQuery","setSearchQuery","isLoading","setIsLoading","hasLoadingError","setHasLoadingError","setMovie","loadMovie","event","a","preventDefault","query","fetch","then","res","json","catch","Response","Error","movieDataFromServer","obj","movieFromServer","movieData","Title","Plot","Poster","imdbID","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","onClick","find","m","undefined","App","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0529aa78.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\n\ntype Props = {\n  movies: Movie[],\n  onMoviesChange: (movies: Movie[]) => void,\n};\n\nconst emptyImg = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\nexport const FindMovie: React.FC<Props> = ({ movies, onMoviesChange }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n  const [movie, setMovie] = useState<Movie>();\n\n  function isAMovieData(obj: MovieData | ResponseError | undefined) {\n    if (!obj) {\n      return false;\n    }\n\n    return 'Poster' in obj && 'Title' in obj\n      && 'Plot' in obj && 'imdbID' in obj;\n  }\n\n  function movieDataToMovie(movieData: MovieData): Movie {\n    const movieFromServer: Movie = {\n      title: movieData.Title,\n      description: movieData.Plot,\n      imgUrl: movieData.Poster === 'N/A'\n        ? emptyImg\n        : movieData.Poster,\n      imdbUrl: `https://www.imdb.com/title/${movieData.imdbID}`,\n      imdbId: movieData.imdbID,\n    };\n\n    return movieFromServer;\n  }\n\n  const loadMovie = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    try {\n      const movieDataFromServer = await getMovie(searchQuery);\n\n      if (!isAMovieData(movieDataFromServer)) {\n        throw new Error('Invalid response');\n      }\n\n      const movieFromServer = movieDataToMovie(\n        movieDataFromServer as MovieData,\n      );\n\n      setMovie(movieFromServer);\n    } catch {\n      setHasLoadingError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleMovieSave = () => {\n    if (movie && !movies.find(m => m.imdbId === movie.imdbId)) {\n      onMoviesChange([...movies, movie]);\n    }\n\n    setSearchQuery('');\n    setMovie(undefined);\n    setIsLoading(false);\n    setHasLoadingError(false);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={loadMovie}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={searchQuery}\n              onChange={(event) => {\n                setSearchQuery(event.target.value);\n                setHasLoadingError(false);\n              }}\n            />\n          </div>\n\n          {hasLoadingError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                { 'is-loading': isLoading },\n              )}\n              disabled={searchQuery === ''}\n            >\n              {movie ? 'Serach again' : 'Find a movie'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleMovieSave}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=4c586442';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie movies={movies} onMoviesChange={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}